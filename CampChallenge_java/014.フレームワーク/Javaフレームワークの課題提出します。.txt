Javaのフレームワークの課題： ・導入の方法や使い方、特徴など

・JSF（JavaServer Faces）
導入方法：Java EEに含まれている
特徴：ＭＶＣの要素に分けて設計する手法であり、機能別の分業や保守性を高めることを可能にした
　　　ユーザーインターフェース構築のためのフレームワークである

・Spring Framework
導入方法：オブジェクトの成立に必要なコードを分離し、プログラム実行時に注入する手法
特徴：DI（Dependency Injection：依存性注入）機能を備えたフレームワークとして定評がある
　　　依存性注入によってクラスの依存関係が解消され、完成済みクラスをテストすることができるようになる
　　　このため、システムを改修する場合も最低限の変更で済ませることができ、開発が楽になるという利点付き！
　　　汎用性が高く、機能が充実している
　　　大規模開発のために機能重視でフレームワークを選ぶ場合、Spring Frameworkを採用することも1つの考え方との事

・Play Framework
使い方：Rubyで使用するフレームワーク
特徴：自動でコンパイルされるため、自分でわざわざコンパイルする必要ない
　　　コードを修正すると変更内容が直ちに反映される
　　　軽量で機能が絞り込まれている

・Apache Struts（アパッチ・ストラッツ）
使い方：無償で提供されていて、誰でも自由に利用することができる。再開発・再配布を行うことができる
特徴：html,bean,logic,tiles,nested、などの便利なタグライブラリが用意されている
